%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.12
%%CreationDate: Sun Apr 28 13:27:18 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUAAGAGGCAGACCCGAUGCUGAUGAGCCGUGUGGUAGAGCUACGGGGCGGUCACGGCGAAACUUCACAUGACCGCCCAUGUGAAGUACAUCGGGUCUGCCUCUUAGA\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 418.12951660]
[92.50000000 403.12951660]
[92.50000000 388.12951660]
[92.50000000 373.12951660]
[92.50000000 358.12951660]
[92.50000000 343.12951660]
[92.50000000 328.12951660]
[92.50000000 313.12951660]
[92.50000000 298.12951660]
[92.50000000 283.12951660]
[92.50000000 268.12951660]
[92.50000000 253.12950134]
[92.50000000 238.12950134]
[92.50000000 223.12950134]
[92.50000000 208.12950134]
[92.50000000 193.12950134]
[92.50000000 178.12950134]
[92.50000000 163.12950134]
[92.50000000 148.12950134]
[92.50000000 133.12950134]
[84.38783264 130.16743469]
[77.28481293 125.25538635]
[71.65007782 118.71085358]
[67.84784698 110.95687103]
[66.12389374 102.49465179]
[66.58964539 93.87118530]
[69.21500397 85.64387512]
[73.83026886 78.34452820]
[64.67055511 66.46599579]
[55.51083374 54.58746338]
[46.35111618 42.70892715]
[37.19139862 30.83039474]
[28.03167915 18.95186043]
[13.96040154 24.44511223]
[-1.08863771 25.75013733]
[-15.89548016 22.76114273]
[-29.25980186 15.72043324]
[-40.09821701 5.19876766]
[-47.53210449 -7.95091009]
[-50.95882797 -22.66261292]
[-50.10060501 -37.74373245]
[-45.02700424 -51.97170639]
[-36.14931870 -64.19313812]
[-24.18722343 -73.41728973]
[-10.11043453 -78.89640045]
[4.93990850 -80.18630981]
[19.74374008 -77.18244171]
[33.10098267 -70.12831116]
[43.92882156 -59.59576035]
[51.34949493 -46.43862152]
[54.76143646 -31.72348213]
[53.88806534 -16.64323425]
[48.80017090 -2.42036438]
[39.91021347 9.79214287]
[49.06993103 21.67067719]
[58.22964859 33.54920959]
[67.38936615 45.42774200]
[76.54908752 57.30627823]
[85.70880127 69.18481445]
[96.99426270 66.16540527]
[108.63524628 67.14810944]
[119.25482178 72.01668549]
[127.59684753 80.19524384]
[141.41369629 74.35619354]
[155.23056030 68.51714325]
[169.04740906 62.67809296]
[182.86425781 56.83903885]
[196.68112183 50.99998856]
[210.49797058 45.16093826]
[224.31483459 39.32188416]
[238.13168335 33.48283386]
[251.94853210 27.64378166]
[257.65917969 12.90729713]
[272.15103149 6.60159063]
[286.82632446 12.46772671]
[292.97845459 27.02543068]
[286.95748901 41.63787460]
[272.33557129 47.63575745]
[257.78759766 41.46063614]
[243.97073364 47.29969025]
[230.15388489 53.13874054]
[216.33702087 58.97779083]
[202.52017212 64.81684113]
[188.70332336 70.65589142]
[174.88645935 76.49494934]
[161.06961060 82.33399963]
[147.25274658 88.17304993]
[133.43589783 94.01210022]
[128.31042480 118.77056885]
[107.50000000 133.12950134]
[107.50000000 148.12950134]
[107.50000000 163.12950134]
[107.50000000 178.12950134]
[107.50000000 193.12950134]
[107.50000000 208.12950134]
[107.50000000 223.12950134]
[107.50000000 238.12950134]
[107.50000000 253.12950134]
[107.50000000 268.12951660]
[107.50000000 283.12951660]
[107.50000000 298.12951660]
[107.50000000 313.12951660]
[107.50000000 328.12951660]
[107.50000000 343.12951660]
[107.50000000 358.12951660]
[107.50000000 373.12951660]
[107.50000000 388.12951660]
[107.50000000 403.12951660]
[107.50000000 418.12951660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[20 90]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
